package com.example.drivietalkieprototype;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.MessageListener;
import org.jivesoftware.smack.Roster;
import org.jivesoftware.smack.RosterEntry;
import org.jivesoftware.smack.RosterGroup;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.packet.Message;
import org.xbill.DNS.tests.primary;

import core.XmppClientFacade;
import android.os.Bundle;
import android.R.anim;
import android.R.integer;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class MainActivity extends Activity {

	MainActivity thisActivity=this;
	
	final int REQ_LOGIN_WINDOW=1;
	final int REQ_CHAT_WINDOW=2;
	
	private XmppClientFacade facade;
	private ListView listView;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
    
        super.onCreate(savedInstanceState);
        setContentView(R.layout.listview);
        
        startLoginWindow();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
   
    
    private void startLoginWindow() {
		
    	Intent intent=new Intent(this,Login.class);
    	startActivityForResult(intent, REQ_LOGIN_WINDOW);
	}
    
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

  	  if (requestCode == REQ_LOGIN_WINDOW) {

  	     if(resultCode == RESULT_OK){      
  	    	 
  	    	String id=data.getStringExtra("id"); 
  	    	String password=data.getStringExtra("password");
  	    	
  	    	facade=new XmppClientFacade();
  	    	try {
				facade.login(id, password, "Gtalk");
				displayRoster();
				setOnPickEntryLister();
				facade.disconnect();
				
			} catch (XMPPException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
  	     }
  	     if (resultCode == RESULT_CANCELED) {    
  	         //Write your code if there's no result
  	     }
  	  }
  	}
    
    private void displayRoster(){
    	
    	// Get roster map
    	List<HashMap<String, String>> rosterMapList=facade.loadRoster();
    	// Get display list
    	List<String> rosterList=new ArrayList<String>();
    	for(HashMap<String, String> map : rosterMapList)
    	{
    		String displayElement="";
    		displayElement+=map.get("user");
    		displayElement+=" ("+map.get("status")+")";
    		rosterList.add(displayElement);
    	}
    	// Display 
    	listView=(ListView) findViewById(R.id.listView);
		// layout
		ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(this,
				android.R.layout.simple_list_item_1, rosterList);
		listView.setAdapter(arrayAdapter);
		arrayAdapter.notifyDataSetChanged();
    }
    
    private void setOnPickEntryLister(){
		
    	listView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> adapter, View view, int itemInt,
					long longInt) {
				
				final String opposite =(String) (listView.getItemAtPosition(itemInt));
			
				Intent intent=new Intent(thisActivity,Chat.class);
		    	startActivity(intent);
				
//				facade.StartChat(opposite, new MessageListener() {
//					
//					@Override
//					public void processMessage(Chat chat, Message message) {
//						// process
//						if(message.getBody()!=null)
//						{
//							final String messageDisplay = opposite + " :" + message.getBody();
//							
//						}
//					}
//				});
				
				}
			});    
    }
}
