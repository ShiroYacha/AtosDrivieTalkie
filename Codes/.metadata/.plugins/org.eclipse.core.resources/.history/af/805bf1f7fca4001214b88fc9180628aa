package core;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.jivesoftware.smack.Roster;
import org.jivesoftware.smack.RosterEntry;
import org.jivesoftware.smack.RosterGroup;
import org.jivesoftware.smack.XMPPConnection;

import android.R.string;


public class RosterManager {

	private XMPPConnection connection;
	
	public RosterManager(XMPPConnection connection)
	{
		this.connection=connection;
	}
	
	public Map<String,String> getRosterList()
	{
		Roster roster = connection.getRoster();
		Map<String,String> map = new HashMap<String,String>();
		for (RosterEntry entry : roster.getEntries()) {
			map.put("user", entry.getUser());
			map.put("status", roster.getPresence(entry.getUser()));
			map.put("user", entry.getUser());
			String elementString = "";
			elementString += "user:" + entry.getUser() + "; ";
			elementString += "status:" + roster.getPresence(entry.getUser())
					+ "; ";
			elementString += "type:" + entry.getType() + "; ";
			elementString += "group:";
			for (RosterGroup group : entry.getGroups()) {
				elementString += group.getName();
			}
			elementString += "";
			list.add(elementString);
		}
		return list;
	}
	
	public RosterEntry tryGetRosterEntryByName(String userName)
	{
		Roster roster = connection.getRoster();
		for (RosterEntry entry : roster.getEntries()) {
			if(entry.getUser()==userName)
				return entry;
		}
		return null;
	}
}
